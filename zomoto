add Codeadd Markdown
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
plt.style.use('dark_background')
add Codeadd Markdown
Reading CSV
add Codeadd Markdown
df = pd.read_csv('../input/zomato-bangalore-restaurants/zomato.csv')
df.head()
add Codeadd Markdown
df.shape
add Codeadd Markdown
df.columns
add Codeadd Markdown
df = df.drop(['url', 'address', 'phone', 'menu_item', 'dish_liked', 'reviews_list'], axis = 1)
df.head()
add Codeadd Markdown
df.info()
add Codeadd Markdown
Dropping Duplicates
add Codeadd Markdown
df.drop_duplicates(inplace = True)
df.shape
add Codeadd Markdown
Cleaning Rate Column
add Codeadd Markdown
df['rate'].unique()
add Codeadd Markdown
Removing "NEW" , "-" and "/5" from Rate Column
add Codeadd Markdown
def handlerate(value):
    if(value=='NEW' or value=='-'):
        return np.nan
    else:
        value = str(value).split('/')
        value = value[0]
        return float(value)
    
df['rate'] = df['rate'].apply(handlerate)
df['rate'].head()
add Codeadd Markdown
Filling Null Values in Rate Column with Mean
add Codeadd Markdown
df['rate'].fillna(df['rate'].mean(), inplace = True)
df['rate'].isnull().sum()
add Codeadd Markdown
df.info()
add Codeadd Markdown
Dropping Null Values
add Codeadd Markdown
df.dropna(inplace = True)
df.head()
add Codeadd Markdown
df.rename(columns = {'approx_cost(for two people)':'Cost2plates', 'listed_in(type)':'Type'}, inplace = True)
df.head()
add Codeadd Markdown
df['location'].unique()
add Codeadd Markdown
df['listed_in(city)'].unique()
add Codeadd Markdown
Listed in(city) and location, both are there, lets keep only one.
add Codeadd Markdown
df = df.drop(['listed_in(city)'], axis = 1)
add Codeadd Markdown
df['Cost2plates'].unique()
add Codeadd Markdown
Removing , from Cost2Plates Column
add Codeadd Markdown
def handlecomma(value):
    value = str(value)
    if ',' in value:
        value = value.replace(',', '')
        return float(value)
    else:
        return float(value)
    
df['Cost2plates'] = df['Cost2plates'].apply(handlecomma)
df['Cost2plates'].unique()
        
add Codeadd Markdown
df.head()
add Codeadd Markdown
Cleaning Rest Type Column
add Codeadd Markdown
rest_types = df['rest_type'].value_counts(ascending  = False)
rest_types
add Codeadd Markdown
rest_types_lessthan1000 = rest_types[rest_types<1000]
rest_types_lessthan1000
add Codeadd Markdown
Making Rest Types less than 1000 in frequency as others
add Codeadd Markdown
def handle_rest_type(value):
    if(value in rest_types_lessthan1000):
        return 'others'
    else:
        return value
        
df['rest_type'] = df['rest_type'].apply(handle_rest_type)
df['rest_type'].value_counts()
        
add Codeadd Markdown
Cleaning Location Column
add Codeadd Markdown
location = df['location'].value_counts(ascending  = False)
​
location_lessthan300 = location[location<300]
​
​
​
def handle_location(value):
    if(value in location_lessthan300):
        return 'others'
    else:
        return value
        
df['location'] = df['location'].apply(handle_location)
df['location'].value_counts()
add Codeadd Markdown
Cleaning Cuisines Column
add Codeadd Markdown
cuisines = df['cuisines'].value_counts(ascending  = False)
​
​
cuisines_lessthan100 = cuisines[cuisines<100]
​
​
​
def handle_cuisines(value):
    if(value in cuisines_lessthan100):
        return 'others'
    else:
        return value
        
df['cuisines'] = df['cuisines'].apply(handle_cuisines)
df['cuisines'].value_counts()
​
add Codeadd Markdown
df.head()
add Codeadd Markdown
Data is Clean, Lets jump to Visualization
add Codeadd Markdown
Count Plot of Various Locations
add Codeadd Markdown
plt.figure(figsize = (16,10))
ax = sns.countplot(df['location'])
plt.xticks(rotation=90)
add Codeadd Markdown
Visualizing Online Order
add Codeadd Markdown
plt.figure(figsize = (6,6))
sns.countplot(df['online_order'], palette = 'inferno')
add Codeadd Markdown
Visualizing Book Table
add Codeadd Markdown
plt.figure(figsize = (6,6))
sns.countplot(df['book_table'], palette = 'rainbow')
add Codeadd Markdown
Visualizing Online Order vs Rate
add Codeadd Markdown
plt.figure(figsize = (6,6))
sns.boxplot(x = 'online_order', y = 'rate', data = df)
add Codeadd Markdown
Visualizing Book Table vs Rate
add Codeadd Markdown
plt.figure(figsize = (6,6))
sns.boxplot(x = 'book_table', y = 'rate', data = df)
add Codeadd Markdown
Visualizing Online Order Facility, Location Wise
add Codeadd Markdown
df1 = df.groupby(['location','online_order'])['name'].count()
df1.to_csv('location_online.csv')
df1 = pd.read_csv('location_online.csv')
df1 = pd.pivot_table(df1, values=None, index=['location'], columns=['online_order'], fill_value=0, aggfunc=np.sum)
df1
add Codeadd Markdown
df1.plot(kind = 'bar', figsize = (15,8))
add Codeadd Markdown
Visualizing Book Table Facility, Location Wise
add Codeadd Markdown
df2 = df.groupby(['location','book_table'])['name'].count()
df2.to_csv('location_booktable.csv')
df2 = pd.read_csv('location_booktable.csv')
df2 = pd.pivot_table(df2, values=None, index=['location'], columns=['book_table'], fill_value=0, aggfunc=np.sum)
df2
add Codeadd Markdown
df2.plot(kind = 'bar', figsize = (15,8))
add Codeadd Markdown
Visualizing Types of Restaurents vs Rate
add Codeadd Markdown
plt.figure(figsize = (14, 8))
sns.boxplot(x = 'Type', y = 'rate', data = df, palette = 'inferno')
add Codeadd Markdown
Grouping Types of Restaurents, location wise
add Codeadd Markdown
df3 = df.groupby(['location','Type'])['name'].count()
df3.to_csv('location_Type.csv')
df3 = pd.read_csv('location_Type.csv')
df3 = pd.pivot_table(df3, values=None, index=['location'], columns=['Type'], fill_value=0, aggfunc=np.sum)
df3
add Codeadd Markdown
df3.plot(kind = 'bar', figsize = (36,8))
add Codeadd Markdown
No. of Votes, Location Wise
add Codeadd Markdown
df4 = df[['location', 'votes']]
df4.drop_duplicates()
df5 = df4.groupby(['location'])['votes'].sum()
df5 = df5.to_frame()
df5 = df5.sort_values('votes', ascending=False)
df5.head()
add Codeadd Markdown
plt.figure(figsize = (15,8))
sns.barplot(df5.index , df5['votes'])
plt.xticks(rotation = 90)
add Codeadd Markdown
df.head()
add Codeadd Markdown
Visualizing Top Cuisines
add Codeadd Markdown
df6 = df[['cuisines', 'votes']]
df6.drop_duplicates()
df7 = df6.groupby(['cuisines'])['votes'].sum()
df7 = df7.to_frame()
df7 = df7.sort_values('votes', ascending=False)
df7.head()
add Codeadd Markdown
df7 = df7.iloc[1:, :]
df7.head()
add Codeadd Markdown
plt.figure(figsize = (15,8))
sns.barplot(df7.index , df7['votes'])
plt.xticks(rotation = 90)
